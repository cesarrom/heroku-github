!function(e){function t(t){for(var n,i,u=t[0],s=t[1],l=t[2],d=0,p=[];d<u.length;d++)i=u[d],a[i]&&p.push(a[i][0]),a[i]=0;for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);for(c&&c(t);p.length;)p.shift()();return o.push.apply(o,l||[]),r()}function r(){for(var e,t=0;t<o.length;t++){for(var r=o[t],n=!0,u=1;u<r.length;u++){var s=r[u];0!==a[s]&&(n=!1)}n&&(o.splice(t--,1),e=i(i.s=r[0]))}return e}var n={},a={1:0},o=[];function i(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=n,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/public/";var u=window.webpackJsonp=window.webpackJsonp||[],s=u.push.bind(u);u.push=t,u=u.slice();for(var l=0;l<u.length;l++)t(u[l]);var c=s;o.push([853,0]),r()}({224:function(e,t,r){e.exports=r.p+"9a2967665e5fc0a1e6136325964e38ad.png"},366:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(92),a=r(2);t.User=function(e){return a.createElement(n.Card,null,a.createElement(n.CardHeader,{title:"User: "+e.user.userName}),a.createElement(n.CardContent,null,a.createElement(n.Typography,{variant:"subheading"},"Id: ",e.user.userId),a.createElement(n.Typography,{variant:"subheading"},"Image Url: ",e.user.imageUrl)))}},387:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(386);t.loadUsersAPI=function(){return n.default.get("/api/users").then(function(e){return e.data})}},388:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(223),a=r(92),o=r(2),i=r(109),u=r(387),s=r(366),l=function(e){function t(t){var r=e.call(this,t)||this;return r.state={users:[],isLoading:!0},r}return n.__extends(t,e),t.prototype.render=function(){var e=this;return this.state.isLoading?o.createElement("div",null,"Loading..."):o.createElement(o.Fragment,null,o.createElement(a.Grid,{item:!0,xs:12},o.createElement(a.Card,null,o.createElement(a.CardHeader,{title:"Users List"}),o.createElement(a.CardContent,null,o.createElement(a.List,null,this.state.users.map(function(e){return o.createElement(a.ListItem,{key:e.userId},o.createElement(i.NavLink,{to:"/users-list/"+e.userId},e.userName))}))))),o.createElement(a.Grid,{item:!0,xs:12},o.createElement(i.Route,{exact:!0,path:"/users-list/:userId",render:function(t){return o.createElement(s.User,{user:e.getUserById(t.match.params.userId)})}})))},t.prototype.componentDidMount=function(){return n.__awaiter(this,void 0,void 0,function(){var e;return n.__generator(this,function(t){switch(t.label){case 0:return[4,u.loadUsersAPI()];case 1:return e=t.sent(),this.setState({users:e,isLoading:!1}),[2]}})})},t.prototype.getUserById=function(e){return this.state.users.find(function(t){return t.userId===e})},t}(o.Component);t.UsersList=l},392:function(e,t,r){(t=e.exports=r(391)(!0)).push([e.i,"._3rhdG1zOavj_tpC7k2ELY {\n    background-color: bisque;\n}\n\n._3dU5Kg4JgkBi9iI2r9Yyqo {\n    width: 150px;\n    padding-bottom: 25px;\n}","",{version:3,sources:["C:/Users/LENOVO/gmaster/heroku-github/src/client/components/Home/Home.css"],names:[],mappings:"AAAA;IACI,yBAAyB;CAC5B;;AAED;IACI,aAAa;IACb,qBAAqB;CACxB",file:"Home.css",sourcesContent:[".title {\n    background-color: bisque;\n}\n\n.logo {\n    width: 150px;\n    padding-bottom: 25px;\n}"],sourceRoot:""}]),t.locals={title:"_3rhdG1zOavj_tpC7k2ELY",logo:"_3dU5Kg4JgkBi9iI2r9Yyqo"}},393:function(e,t,r){var n=r(392);"string"==typeof n&&(n=[[e.i,n,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};r(390)(n,a);n.locals&&(e.exports=n.locals)},394:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(92),a=r(2),o=r(109),i=r(393),u=r(224);t.Home=function(){return a.createElement(n.Grid,{item:!0,xs:12},a.createElement(n.Card,null,a.createElement(n.CardHeader,{title:"FullStack React with TypeScript"}),a.createElement(n.CardContent,null,a.createElement("img",{src:u,className:i.logo}),a.createElement(n.Typography,{variant:"subheading"},"This is a starter kit to get you up and running with React & TypeScript on top of material-ui."),a.createElement(n.Typography,{variant:"subheading",gutterBottom:!0},"An example for client/server shared code can be found at `",a.createElement(o.Link,{to:"/users-list"},"Example Users List")," tab"),a.createElement(n.Typography,null,"You can read more about how to share code between the client and the server at my ",a.createElement("a",{href:"https://medium.com/front-end-hacking/client-server-and-shared-code-846097c5260e"},"medium blog post"),"."))))}},395:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(223),a=r(92),o=r(2),i=r(109);t.Header=function(){return o.createElement(a.AppBar,{position:"static",color:"default"},o.createElement(a.Toolbar,null,o.createElement(a.Button,{color:"primary",component:function(e){return o.createElement(i.Link,n.__assign({to:"/"},e))}},"Home"),o.createElement(a.Button,{color:"primary",component:function(e){return o.createElement(i.Link,n.__assign({to:"/users-list"},e))}},"Example Users List"),o.createElement(a.Button,{color:"primary",component:function(e){return o.createElement(i.Link,n.__assign({to:"/about"},e))}},"About")))}},396:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(92),a=r(2);r(224);t.About=function(){return a.createElement(n.Grid,{item:!0,xs:12},a.createElement(n.Card,null,a.createElement(n.CardHeader,{title:"Created by Gil Amran."}),a.createElement(n.CardContent,null,a.createElement(n.Typography,{variant:"subheading"},"You can find information at ",a.createElement("a",{href:"http://github.com/gilamran/fullstack-typescript"},"github")))))}},642:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(92),a=r(2),o=r(109),i=r(396),u=r(395),s=r(394),l=r(388);t.App=function(){return a.createElement(o.BrowserRouter,null,a.createElement("div",null,a.createElement(n.Grid,{container:!0,spacing:24},a.createElement(u.Header,null),a.createElement(o.Switch,null,a.createElement(o.Route,{exact:!0,path:"/",component:s.Home}),a.createElement(o.Route,{path:"/about",component:i.About}),a.createElement(o.Route,{path:"/users-list",component:l.UsersList})))))}},650:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),a=r(29),o=r(642);a.render(n.createElement(o.App,null),document.getElementById("app"))},853:function(e,t,r){r(852),e.exports=r(650)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,